"""Colocando campos obrigatÃ³rios

Revision ID: 09171ae068e7
Revises: 77a208ca6759
Create Date: 2023-03-16 23:31:19.642573

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '09171ae068e7'
down_revision = '77a208ca6759'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tb_dominio', 'tipo_dominio',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('tb_usuario', 'cpf',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('tb_usuario', 'data_nascimento',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('tb_usuario', 'endereco',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('tb_usuario', 'forma_pagamento',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('tb_usuario', 'telefone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('tb_usuario', 'ativo',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('tb_usuario', 'plano',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('tb_usuario_tipo_usuario_fkey', 'tb_usuario', type_='foreignkey')
    op.drop_column('tb_usuario', 'tipo_usuario')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tb_usuario', sa.Column('tipo_usuario', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('tb_usuario_tipo_usuario_fkey', 'tb_usuario', 'tb_dominio', ['tipo_usuario'], ['id'])
    op.alter_column('tb_usuario', 'plano',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('tb_usuario', 'ativo',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('tb_usuario', 'telefone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('tb_usuario', 'forma_pagamento',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('tb_usuario', 'endereco',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('tb_usuario', 'data_nascimento',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('tb_usuario', 'cpf',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('tb_dominio', 'tipo_dominio',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_table('tb_pagamento',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cpf_usuario', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data_vencimento', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('forma_pagamento', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('valor_pagamento', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cpf_usuario'], ['tb_usuario.cpf'], name='tb_pagamento_cpf_usuario_fkey'),
    sa.ForeignKeyConstraint(['forma_pagamento'], ['tb_dominio.id'], name='tb_pagamento_forma_pagamento_fkey'),
    sa.PrimaryKeyConstraint('id', name='tb_pagamento_pkey')
    )
    op.create_table('tb_politicas_pagamentos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('taxa_juros', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('dias_vencidos', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='tb_politicas_pagamentos_pkey')
    )
    op.create_table('tb_treino',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cpf_usuario', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nome_exercicio', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('series', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('repeticoes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_fim', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('modalidade', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('frequencia', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('carga', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cpf_usuario'], ['tb_usuario.cpf'], name='tb_treino_cpf_usuario_fkey'),
    sa.ForeignKeyConstraint(['modalidade'], ['tb_dominio.id'], name='tb_treino_modalidade_fkey'),
    sa.PrimaryKeyConstraint('id', name='tb_treino_pkey')
    )
    op.create_table('tb_administrador',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data_nascimento', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('endereco', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('telefone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='tb_administrador_pkey'),
    sa.UniqueConstraint('email', name='tb_administrador_email_key')
    )
    # ### end Alembic commands ###
